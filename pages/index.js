
import ContentEmojis from "@/components/emojis/ContentEmojis";
import Nav from "@/components/header/Header";
import BodyWrapper from "@/components/main/BodyWrapper";
import React, { useState, useEffect } from "react"
import styles from '../public/page.module.css'
import Form from "@/components/form/Form";
import { supabase } from "@/lib/supabaseClient";
import Modal from "@/components/modal/modal";
import { useRouter } from "next/router";
const emojis = [
  {
    category: "smileys & peopple",
    icons: [
      "üòÇ",
      "üòá",
      "üôÉ",
      "üòç",
      "üòú",
      "üòò",
      "ü§ì",
      "üòé",
      "üòè",
      "ü•∫",
      "üò¢",
      "ü§Ø",
      "üò±",
      "ü§î",
      "üò∂",
      "üòµ",
      "ü§ê",
      "ü§¢",
      "ü§ß",
      "üò∑",
      "ü§ï",
      "ü§ë",
      "ü§†",
      "‚ù§Ô∏è",
      "üòà",
      "ü§°",
      "üí©",
      "üëª",
      "‚ò†Ô∏è",
      "üëΩ",
      "üëæ",
      "ü§ñ",
      "üéÉ",
      "üí™",
      "üíã",
      "üíÑ",
      "üëÇ",
      "üëÉ",
      "üë£",
      "üëÅÔ∏è",
      "üëÄ",
      "üß†",
      "üë∂",
      "üëè",
      "ü§ù",
      "üôå",
      "üëç",
      "üëé",
      "‚úä",
      "‚úåÔ∏è",
      "ü§ò",
      "üëå",
      "üëâ",
      "üëã",
      "‚úçÔ∏è",
      "üôè",
      "üíÖ",
      "ü¶∂",
      "ü§≥",
      "üíÉ",
      "üëï",
      "üëñ",
      "üëó",
      "üëô",
      "üëò",
      "üë†",
      "üë¢",
      "üëû",
      "üëü",
      "üé©",
      "üß¢",
      "üëí",
      "üéì",
      "üëë",
      "üíç",
      "üëõ",
      "üíº",
      "üéí",
      "üíî",
      "ü•∂",
      "ü§¨",
      "üí§",
      "üëÖ",
      "ü•≥",
      "üíä",
    ]
  }, {
    category: "Animal & Nature",
    icons: [
      "üê∂",
      "üê±",
      "üê≠",
      "üê∞",
      "ü¶ä",
      "üêª",
      "üêº",
      "üêÆ",
      "üê®",
      "üêØ",
      "ü¶Å",
      "üê∑",
      "üêΩ",
      "üê∏",
      "üêµ",
      "üôà",
      "üêî",
      "üêß",
      "üê£",
      "ü¶Ü",
      "ü¶Ö",
      "ü¶â",
      "ü¶á",
      "üê∫",
      "üêó",
      "üê¥",
      "ü¶Ñ",
      "üêù",
      "üêõ",
      "ü¶ã",
      "üêå",
      "üêû",
      "üêú",
      "üï∑Ô∏è",
      "üï∏Ô∏è",
      "ü¶Ç",
      "üê¢",
      "üêç",
      "ü¶é",
      "ü¶ñ",
      "üêä",
      "ü¶ì",
      "ü¶ç",
      "ü¶è",
      "üêô",
      "ü¶Ä",
      "üê¨",
      "üêã",
      "ü¶à",
      "üêò",
      "üê™",
      "üêÉ",
      "üêë",
      "üêê",
      "ü¶å",
      "ü¶É",
      "üêÄ",
      "üêæ",
      "üêâ",
      "üåµ",
      "üå≤",
      "üå¥",
      "üçÄ",
      "üéã",
      "üçÅ",
      "üçÑ",
      "üêö",
      "üíê",
      "üåπ",
      "üå∏",
      "üåª",
      "üåï",
      "üåô",
      "‚≠ê",
      "‚ú®",
      "‚ö°",
      "‚òÑÔ∏è",
      "üí•",
      "üî•",
      "üå™Ô∏è",
      "üåà",
      "‚òÄÔ∏è",
      "‚òÅÔ∏è",
      "‚ùÑÔ∏è",
      "‚õÑ",
      "üí®",
      "üí¶",
      "üåä"
    ],
  }, {
    category: "food",
    icons: [
      "üçé",
      "üçê",
      "üçä",
      "üçã",
      "üçå",
      "üçâ",
      "üçá",
      "üçì",
      "üçà",
      "üçí",
      "üçë",
      "üçç",
      "ü•ù",
      "üçÜ",
      "ü•ë",
      "ü•í",
      "üå∂Ô∏è",
      "üåΩ",
      "ü•ï",
      "ü•î",
      "ü•ê",
      "üçû",
      "üßÄ",
      "ü•ö",
      "üç≥",
      "ü•û",
      "ü•ì",
      "üçó",
      "üå≠",
      "üçî",
      "üçü",
      "üçï",
      "ü•ô",
      "üåÆ",
      "üåØ",
      "ü•ó",
      "üçù",
      "üçú",
      "üç£",
      "üç±",
      "üç§",
      "üçö",
      "üçò",
      "üç•",
      "üç°",
      "üç¶",
      "üéÇ",
      "üç≠",
      "üç¨",
      "üç´",
      "üçø",
      "üç©",
      "üç™",
      "ü•ú",
      "üå∞",
      "üçØ",
      "ü•õ",
      "üçº",
      "‚òï",
      "üçµ",
      "üç∂",
      "üç∫",
      "üç∑",
      "ü•É",
      "üç∏",
      "üçæ",
      "ü•Ñ",
      "üçΩÔ∏è"
    ]
  }, {
    category: "sports",
    icons: [
      "‚öΩ",
      "üèÄ",
      "üèà",
      "‚öæ",
      "üéæ",
      "üèê",
      "üé±",
      "üèì",
      "üè∏",
      "üèí",
      "üèè",
      "ü•Ö",
      "‚õ≥",
      "üèπ",
      "üé£",
      "ü•ä",
      "ü•ã",
      "üéΩ",
      "‚õ∏Ô∏è",
      "üéø",
      "üèÜ",
      "üéñÔ∏è",
      "üéüÔ∏è",
      "üé™",
      "üé≠",
      "üé®",
      "üé¨",
      "üé§",
      "üéß",
      "üéº",
      "üéπ",
      "ü•Å",
      "üé∑",
      "üé∫",
      "üé∏",
      "üéª",
      "üé≤",
      "‚ôüÔ∏è",
      "üéØ",
      "üé≥",
      "üéÆ",
      "üé∞",
      "üõπ",
      "üéµ"
    ],
  }, {
    category: "travel",
    icons: [
      "üèÅ",
      "üöó",
      "üèéÔ∏è",
      "üöì",
      "üöë",
      "üöí",
      "üöö",
      "üöú",
      "üö≤",
      "üõµ",
      "üèçÔ∏è",
      "üö®",
      "üö†",
      "üöÇ",
      "‚úàÔ∏è",
      "üí∫",
      "üöÄ",
      "üõ∏",
      "üöÅ",
      "üõ∂",
      "‚õµ",
      "üö¢",
      "‚öì",
      "üöß",
      "üö¶",
      "üó∫Ô∏è",
      "üóø",
      "üóΩ",
      "üóº",
      "üè∞",
      "üèØ",
      "üèüÔ∏è",
      "üé°",
      "üé¢",
      "üé†",
      "üèñÔ∏è",
      "‚õ∞Ô∏è",
      "üèïÔ∏è",
      "üè†"
    ]
  }, {
    category: "tecnologies",
    icons: [
      "‚åö",
      "üì±",
      "üíª",
      "üñ®Ô∏è",
      "üïπÔ∏è",
      "üíæ",
      "üì∑",
      "üé•",
      "üìü",
      "üì∫",
      "üìª",
      "üéõÔ∏è",
      "‚è∞",
      "‚åõ",
      "üì°",
      "üîã",
      "üîå",
      "üí°",
      "üî¶",
      "üïØÔ∏è",
      "üõ¢Ô∏è"
    ],
  }, {
    category: "objects",
    icons: [
      "üíµ",
      "üí∞",
      "üí≥",
      "üíé",
      "‚öñÔ∏è",
      "üîß",
      "üî®",
      "üî©",
      "‚öôÔ∏è",
      "‚õìÔ∏è",
      "üî´",
      "üí£",
      "üî™",
      "üó°Ô∏è",
      "üõ°Ô∏è",
      "üö¨",
      "‚ö∞Ô∏è",
      "üè∫",
      "üîÆ",
      "üìø",
      "üíà",
      "üî≠",
      "üî¨",
      "üï≥Ô∏è",

      "üíâ",
      "üöΩ",
      "üö∞",
      "üöø",
      "üõãÔ∏è",
      "üîë",
      "üö™",
      "üóÑÔ∏è",
      "üìé",
      "üìè",
      "üìê",
      "üìå",
      "‚úÇÔ∏è",
      "üóëÔ∏è",
      "üñºÔ∏è",
      "üõçÔ∏è",
      "üõí",
      "üéÅ",
      "üéà",
      "üéè",
      "üéÄ",
      "üéâ",
      "üéé",
      "üèÆ",
      "üéê",
      "‚úâÔ∏è",
      "üì¶",
      "üìú",
      "üìà",
      "üóûÔ∏è",
      "üìì",
      "üìñ",
      "üñçÔ∏è",
      "‚úèÔ∏è",
      "üîí",
      "üÜî",
      "üî±",
      "‚öúÔ∏è",
      "‚ôªÔ∏è",
      "üèß",
      "‚ô†Ô∏è",
      "‚ô£Ô∏è",
      "üÉè",
      "üÄÑ",
      "üîõ",
      "üß©"
    ],
  }, {
    category: "symbols",
    icons: [
      "‚úùÔ∏è",
      "‚ò™Ô∏è",
      "üïâÔ∏è",
      "‚ò∏Ô∏è",
      "‚ú°Ô∏è",
      "üïé",
      "‚òØÔ∏è",
      "‚ò¶Ô∏è",
      "‚ôà",
      "‚ôâ",
      "‚ôä",
      "‚ôã",
      "‚ôå",
      "‚ôç",
      "‚ôé",
      "‚ôè",
      "‚ôê",
      "‚ôë",
      "‚ôí",
      "‚ôì",
      "‚ôæÔ∏è",
      "‚öõÔ∏è",
      "‚ò¢Ô∏è",
      "üÜö",
      "üÜò",
      "üö´",
      "üö≠",
      "üÜí",
      "üÜï",
      "üÜì",
      "üÜô",
      "üíØ",
      "‚ùó",
      "‚ùì",
      "üîî",
      "üîä",
      "üí±",
      "‚ñ∂Ô∏è"
    ]
  }
]
const Home = () => {
  const [selectedEmojis, setSelectedEmojis] = useState([]);
  const [showContentEmojis, setShowContentEmojis] = useState(true);
  const [showButton, setShowButton] = useState(true);
  const [showForm, setShowForm] = useState(false);
  const [showDiscordButton, setShowDiscordButton] = useState(false);
  const [showModal, setShowModal] = useState(false); // Nuevo estado para el modal
  const [isLoggedIn, setIsLoggedIn] = useState(false); // Nuevo estado para el estado de inicio de sesi√≥n
  const [user, setUser] = useState(null); // Nuevo estado para almacenar los datos del usuario

  function handleEmojiSelection(emoji) {
    if (isLoggedIn) {
      if (selectedEmojis.length < 3) {
        const updatedEmojis = [...selectedEmojis, emoji];
        setSelectedEmojis(updatedEmojis);
        localStorage.setItem('selectedEmojis', JSON.stringify(updatedEmojis));
      }
    } else {
      setShowModal(true);
    }
  }
  useEffect(() => {
    const storedEmojis = localStorage.getItem('selectedEmojis');
    if (storedEmojis) {
      setSelectedEmojis(JSON.parse(storedEmojis));
    }
    const { data: subscription } = supabase.auth.onAuthStateChange((_event, session) => {
      if (session) {
        setIsLoggedIn(true);
        setUser(session.user);
      } else {
        setIsLoggedIn(false);
        setUser(null);
      }
    });
    
  }, []);
  
  
  const handleCreateAccount = () => {
    setIsLoggedIn(true);
    setShowContentEmojis(false);
    setShowButton(false);
    setShowDiscordButton(true);
    setShowModal(false); // Cierra el modal despu√©s de iniciar sesi√≥n
  };
  

  const handleCreateAccountBack = () => {
    setShowContentEmojis(true);
    setShowDiscordButton(false);
    setShowModal(false); // Cierra el modal si se retrocede
  };

  const handleLoveIt = () => {
    setShowForm(true);
  };
  return (
    <div className={styles.container}>
     <Nav />
      {!showForm && (
        <BodyWrapper
          selectedEmojis={selectedEmojis}
          setSelectedEmojis={setSelectedEmojis}
          handleCreateAccount={handleCreateAccount}
          showButton={showButton}
          setShowButton={setShowButton}
          handleCreateAccountBack={handleCreateAccountBack}
          handleLoveIt={handleLoveIt}
    
        />
      )}
      {showContentEmojis && (
        <ContentEmojis
          emojis={emojis}
          onEmojiClick={handleEmojiSelection}
          selectedEmojis={selectedEmojis}
        />
      )}
      {showForm && (
        <Form
          handleGoBack={() => setShowForm(false)}
          selectedEmojis={selectedEmojis}
          setShowForm={setShowForm}
          user={user}
        />
      )}
      {showModal && (
        <Modal
          showModal={showModal}
          setShowModal={setShowModal}
          handleCreateAccount={handleCreateAccount}
        />
      )}
    </div>
  );
};

export default Home;
